openapi: 3.0.0
info:
  title: 'Mill unit test API, Showtimes'
  version: '1.1'
  contact:
    name: 'Get help!'
    email: support@example.com
    url: 'https://developer.example.com/help'
tags:
  -
    name: Theaters
servers:
  -
    url: 'https://api.example.com'
    description: Production
  -
    url: 'https://api.example.local'
    description: Development
paths:
  /theaters:
    get:
      summary: 'Get movie theaters.'
      description: 'Returns all movie theatres for a specific location.'
      operationId: getTheaters
      tags:
        - Theaters
      parameters:
        -
          description: 'Location you want theaters in.'
          in: query
          name: location
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Standard request.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/theater'
        400:
          description: 'If the location is invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-mill-path-template: /theaters
      x-mill-visibility-private: true
    post:
      summary: 'Create a movie theater.'
      description: 'Create a new movie theater.'
      operationId: createTheater
      tags:
        - Theaters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  description: 'Theater address'
                  example: '2548 Central Park Ave, Yonkers, NY 10710'
                  type: string
                name:
                  description: 'Name of the theater.'
                  example: 'Alamo Drafthouse Cinema - Yonkers'
                  type: string
                phone_number:
                  description: 'Theater phone number'
                  example: '(914) 226-3082'
                  type: string
              required:
                - address
                - name
                - phone_number
      responses:
        200:
          description: 'Standard request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/theater'
        400:
          description: 'If there is a problem with the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        -
          oauth2:
            - create
      x-mill-path-template: /theaters
      x-mill-visibility-private: true
  '/theaters/{id}':
    get:
      summary: 'Get a single movie theater.'
      description: 'Return information on a specific movie theater.'
      operationId: getTheater
      tags:
        - Theaters
      parameters:
        -
          description: 'Theater ID'
          in: path
          name: id
          required: true
          schema:
            type: number
            example: '1234'
      responses:
        200:
          description: 'Standard request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/theater'
        304:
          description: 'If no content has been modified since the supplied Last-Modified header.'
        404:
          description: 'If the movie theater could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-mill-path-template: /theaters/+id
      x-mill-visibility-private: true
    patch:
      summary: 'Update a movie theater.'
      description: 'Update a movie theaters'' data.'
      operationId: updateTheater
      tags:
        - Theaters
      parameters:
        -
          description: 'Theater ID'
          in: path
          name: id
          required: true
          schema:
            type: number
            example: '1234'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  description: 'Theater address'
                  example: '2548 Central Park Ave, Yonkers, NY 10710'
                  type: string
                name:
                  description: 'Name of the theater.'
                  example: 'Alamo Drafthouse Cinema - Yonkers'
                  type: string
                phone_number:
                  description: 'Theater phone number'
                  example: '(914) 226-3082'
                  type: string
              required:
                - address
                - name
                - phone_number
      responses:
        200:
          description: 'Standard request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/theater'
        400:
          description: 'If there is a problem with the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: 'If the movie movie could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: 'If something cool happened. Returns a unique error code of `1337`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coded-error'
      security:
        -
          oauth2:
            - create
      x-mill-path-template: /theaters/+id
      x-mill-visibility-private: true
    delete:
      summary: 'Delete a movie theater.'
      description: 'Delete a movie theater.'
      operationId: deleteTheater
      tags:
        - Theaters
      parameters:
        -
          description: 'Theater ID'
          in: path
          name: id
          required: true
          schema:
            type: number
            example: '1234'
      responses:
        204:
          description: 'Standard request.'
        404:
          description: 'If the movie theater could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
        -
          oauth2:
            - delete
      x-mill-path-template: /theaters/+id
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: bearer
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/access_token
          scopes:
            create: Create
            delete: Delete
            edit: Edit
            public: Public
        clientCredentials:
          tokenUrl: /oauth/authorize/client
          scopes:
            create: Create
            delete: Delete
            edit: Edit
            public: Public
  schemas:
    coded-error:
      properties:
        error:
          description: 'User-friendly error message'
          type: string
        error_code:
          description: 'Error code'
          type: number
    error:
      properties:
        error:
          description: 'User-friendly error message'
          type: string
    theater:
      properties:
        address:
          description: Address
          type: string
        id:
          description: 'Unique ID'
          type: number
        movies:
          description: 'Movies currently playing'
          items:
            type: string
          type: array
        name:
          description: Name
          type: string
        phone_number:
          description: 'Phone number'
          type: string
        showtimes:
          description: 'Non-movie specific showtimes'
          items:
            type: string
          type: array
        uri:
          description: 'Theater URI'
          type: string
security:
  -
    oauth2:
      - create
      - delete
      - edit
      - public
